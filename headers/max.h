//////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file      max.h
/// @ingroup   Max values
/// @author    Adrian Cojocari
/// @date      31/01/2024
/// @brief     Insert here a short description
///
/// @copyright Copyright (C) Insert Here All Rights Reserved.
//////////////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <algorithm>

//////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief Class that perform different operations all bassed on maximum values.
///
/// @ingroup   max_values
//////////////////////////////////////////////////////////////////////////////////////////////////////

class Max{

    public:
    template < typename T >
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    /// @brief Function compares three different numbers
    /// @param[in] n1 first number to be compared
    /// @param[in] n2 second number to be compared
    /// @param[in] n3 third number to be compared
    /// 
    /// @return maximum from given numbers
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    T getMax(T n1, T n2, T n3)
    {
        T maxNr = std::max(n1,n2);
        return std::max(maxNr,n3);
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////
    /// @brief Function sort a given array in desceding order
    /// @param[in,out] array to be sorted
    /// @param[in] size of array
    /// @return None
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    void sortArrayDesc(int *arr, int size);

    //////////////////////////////////////////////////////////////////////////////////////////////////////
    /// @brief Function get's max value from an array
    /// @param[in,out] array to be sorted
    /// @param[in] size of array
    /// @return int max value
    int getMaxVal(int *arr, int size);
};